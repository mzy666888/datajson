/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/lib/component/brush/selector.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var polygonContain=require("zrender/lib/contain/polygon"),BoundingRect=require("zrender/lib/core/BoundingRect"),_graphic=require("../../util/graphic"),linePolygonIntersect=_graphic.linePolygonIntersect,selector={lineX:getLineSelectors(0),lineY:getLineSelectors(1),rect:{point:function(n,e,t){return n&&t.boundingRect.contain(n[0],n[1])},rect:function(n,e,t){return n&&t.boundingRect.intersect(n)}},polygon:{point:function(n,e,t){return n&&t.boundingRect.contain(n[0],n[1])&&polygonContain.contain(t.range,n[0],n[1])},rect:function(n,e,t){var i=t.range;if(!n||i.length<=1)return!1;var o=n.x,r=n.y,c=n.width,g=n.height,a=i[0];return!!(polygonContain.contain(i,o,r)||polygonContain.contain(i,o+c,r)||polygonContain.contain(i,o,r+g)||polygonContain.contain(i,o+c,r+g)||BoundingRect.create(n).contain(a[0],a[1])||linePolygonIntersect(o,r,o+c,r,i)||linePolygonIntersect(o,r,o,r+g,i)||linePolygonIntersect(o+c,r,o+c,r+g,i)||linePolygonIntersect(o,r+g,o+c,r+g,i))||void 0}}};function getLineSelectors(n){var e=["x","y"],t=["width","height"];return{point:function(e,t,i){if(e){var o=i.range;return inLineRange(e[n],o)}},rect:function(i,o,r){if(i){var c=r.range,g=[i[e[n]],i[e[n]]+i[t[n]]];return g[1]<g[0]&&g.reverse(),inLineRange(g[0],c)||inLineRange(g[1],c)||inLineRange(c[0],g)||inLineRange(c[1],g)}}}}function inLineRange(n,e){return e[0]<=n&&n<=e[1]}var _default=selector;module.exports=_default;
//# sourceMappingURL=/sm/58e1a1ff37a5ec62096b0498c05104e52fd4568a64a116adf3875c47dc2914d4.map