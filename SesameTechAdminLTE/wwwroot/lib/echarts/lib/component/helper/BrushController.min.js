/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/lib/component/helper/BrushController.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var _config=require("../../config"),__DEV__=_config.__DEV__,zrUtil=require("zrender/lib/core/util"),Eventful=require("zrender/lib/mixin/Eventful"),graphic=require("../../util/graphic"),interactionMutex=require("./interactionMutex"),DataDiffer=require("../../data/DataDiffer"),curry=zrUtil.curry,each=zrUtil.each,map=zrUtil.map,mathMin=Math.min,mathMax=Math.max,mathPow=Math.pow,COVER_Z=1e4,UNSELECT_THRESHOLD=6,MIN_RESIZE_LINE_WIDTH=6,MUTEX_RESOURCE_KEY="globalPan",DIRECTION_MAP={w:[0,0],e:[0,1],n:[1,0],s:[1,1]},CURSOR_MAP={w:"ew",e:"ew",n:"ns",s:"ns",ne:"nesw",sw:"nesw",nw:"nwse",se:"nwse"},DEFAULT_BRUSH_OPT={brushStyle:{lineWidth:2,stroke:"rgba(0,0,0,0.3)",fill:"rgba(0,0,0,0.1)"},transformable:!0,brushMode:"single",removeOnClick:!1},baseUID=0;function BrushController(e){Eventful.call(this),this._zr=e,this.group=new graphic.Group,this._brushType,this._brushOption,this._panels,this._track=[],this._dragging,this._lastMouseMovePoint={},this._covers=[],this._creatingCover,this._creatingPanel,this._enableGlobalPan,this._uid="brushController_"+baseUID++,this._handlers={},each(mouseHandlers,function(e,r){this._handlers[r]=zrUtil.bind(e,this)},this)}function doEnableBrush(e,r){var t=e._zr;e._enableGlobalPan||interactionMutex.take(t,MUTEX_RESOURCE_KEY,e._uid),each(e._handlers,function(e,r){t.on(r,e)}),e._brushType=r.brushType,e._brushOption=zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT),r,!0)}function doDisableBrush(e){var r=e._zr;interactionMutex.release(r,MUTEX_RESOURCE_KEY,e._uid),each(e._handlers,function(e,t){r.off(t,e)}),e._brushType=e._brushOption=null}function createCover(e,r){var t=coverRenderers[r.brushType].createCover(e,r);return t.__brushOption=r,updateZ(t,r),e.group.add(t),t}function endCreating(e,r){var t=getCoverRenderer(r);return t.endCreating&&(t.endCreating(e,r),updateZ(r,r.__brushOption)),r}function updateCoverShape(e,r){var t=r.__brushOption;getCoverRenderer(r).updateCoverShape(e,r,t.range,t)}function updateZ(e,r){var t=r.z;null==t&&(t=COVER_Z),e.traverse(function(e){e.z=t,e.z2=t})}function updateCoverAfterCreation(e,r){getCoverRenderer(r).updateCommon(e,r),updateCoverShape(e,r)}function getCoverRenderer(e){return coverRenderers[e.__brushOption.brushType]}function getPanelByPoint(e,r,t){var n,a=e._panels;if(!a)return!0;var i=e._transform;return each(a,function(e){e.isTargetByCursor(r,t,i)&&(n=e)}),n}function getPanelByCover(e,r){var t=e._panels;if(!t)return!0;var n=r.__brushOption.panelId;return null==n||t[n]}function clearCovers(e){var r=e._covers,t=r.length;return each(r,function(r){e.group.remove(r)},e),r.length=0,!!t}function trigger(e,r){var t=map(e._covers,function(e){var r=e.__brushOption,t=zrUtil.clone(r.range);return{brushType:r.brushType,panelId:r.panelId,range:t}});e.trigger("brush",t,{isEnd:!!r.isEnd,removeOnClick:!!r.removeOnClick})}function shouldShowCover(e){var r=e._track;if(!r.length)return!1;var t=r[r.length-1],n=r[0],a=t[0]-n[0],i=t[1]-n[1];return mathPow(a*a+i*i,.5)>UNSELECT_THRESHOLD}function getTrackEnds(e){var r=e.length-1;return r<0&&(r=0),[e[0],e[r]]}function createBaseRectCover(e,r,t,n){var a=new graphic.Group;return a.add(new graphic.Rect({name:"main",style:makeStyle(t),silent:!0,draggable:!0,cursor:"move",drift:curry(e,r,a,"nswe"),ondragend:curry(trigger,r,{isEnd:!0})})),each(n,function(t){a.add(new graphic.Rect({name:t,style:{opacity:0},draggable:!0,silent:!0,invisible:!0,drift:curry(e,r,a,t),ondragend:curry(trigger,r,{isEnd:!0})}))}),a}function updateBaseRect(e,r,t,n){var a=n.brushStyle.lineWidth||0,i=mathMax(a,MIN_RESIZE_LINE_WIDTH),o=t[0][0],u=t[1][0],s=o-a/2,l=u-a/2,c=t[0][1],h=t[1][1],d=c-i+a/2,f=h-i+a/2,g=c-o,p=h-u,v=g+a,_=p+a;updateRectShape(e,r,"main",o,u,g,p),n.transformable&&(updateRectShape(e,r,"w",s,l,i,_),updateRectShape(e,r,"e",d,l,i,_),updateRectShape(e,r,"n",s,l,v,i),updateRectShape(e,r,"s",s,f,v,i),updateRectShape(e,r,"nw",s,l,i,i),updateRectShape(e,r,"ne",d,l,i,i),updateRectShape(e,r,"sw",s,f,i,i),updateRectShape(e,r,"se",d,f,i,i))}function updateCommon(e,r){var t=r.__brushOption,n=t.transformable,a=r.childAt(0);a.useStyle(makeStyle(t)),a.attr({silent:!n,cursor:n?"move":"default"}),each(["w","e","n","s","se","sw","ne","nw"],function(t){var a=r.childOfName(t),i=getGlobalDirection(e,t);a&&a.attr({silent:!n,invisible:!n,cursor:n?CURSOR_MAP[i]+"-resize":null})})}function updateRectShape(e,r,t,n,a,i,o){var u=r.childOfName(t);u&&u.setShape(pointsToRect(clipByPanel(e,r,[[n,a],[n+i,a+o]])))}function makeStyle(e){return zrUtil.defaults({strokeNoScale:!0},e.brushStyle)}function formatRectRange(e,r,t,n){var a=[mathMin(e,t),mathMin(r,n)],i=[mathMax(e,t),mathMax(r,n)];return[[a[0],i[0]],[a[1],i[1]]]}function getTransform(e){return graphic.getTransform(e.group)}function getGlobalDirection(e,r){if(r.length>1)return("e"===(t=[getGlobalDirection(e,(r=r.split(""))[0]),getGlobalDirection(e,r[1])])[0]||"w"===t[0])&&t.reverse(),t.join("");var t;return{left:"w",right:"e",top:"n",bottom:"s"}[t=graphic.transformDirection({w:"left",e:"right",n:"top",s:"bottom"}[r],getTransform(e))]}function driftRect(e,r,t,n,a,i,o,u){var s=n.__brushOption,l=e(s.range),c=toLocalDelta(t,i,o);each(a.split(""),function(e){var r=DIRECTION_MAP[e];l[r[0]][r[1]]+=c[r[0]]}),s.range=r(formatRectRange(l[0][0],l[1][0],l[0][1],l[1][1])),updateCoverAfterCreation(t,n),trigger(t,{isEnd:!1})}function driftPolygon(e,r,t,n,a){var i=r.__brushOption.range,o=toLocalDelta(e,t,n);each(i,function(e){e[0]+=o[0],e[1]+=o[1]}),updateCoverAfterCreation(e,r),trigger(e,{isEnd:!1})}function toLocalDelta(e,r,t){var n=e.group,a=n.transformCoordToLocal(r,t),i=n.transformCoordToLocal(0,0);return[a[0]-i[0],a[1]-i[1]]}function clipByPanel(e,r,t){var n=getPanelByCover(e,r);return n&&!0!==n?n.clipPath(t,e._transform):zrUtil.clone(t)}function pointsToRect(e){var r=mathMin(e[0][0],e[1][0]),t=mathMin(e[0][1],e[1][1]);return{x:r,y:t,width:mathMax(e[0][0],e[1][0])-r,height:mathMax(e[0][1],e[1][1])-t}}function resetCursor(e,r,t){if(e._brushType){var n=e._zr,a=e._covers,i=getPanelByPoint(e,r,t);if(!e._dragging)for(var o=0;o<a.length;o++){var u=a[o].__brushOption;if(i&&(!0===i||u.panelId===i.panelId)&&coverRenderers[u.brushType].contain(a[o],t[0],t[1]))return}i&&n.setCursorStyle("crosshair")}}function preventDefault(e){var r=e.event;r.preventDefault&&r.preventDefault()}function mainShapeContain(e,r,t){return e.childOfName("main").contain(r,t)}function updateCoverByMouse(e,r,t,n){var a,i=e._creatingCover,o=e._creatingPanel,u=e._brushOption;if(e._track.push(t.slice()),shouldShowCover(e)||i){if(o&&!i){"single"===u.brushMode&&clearCovers(e);var s=zrUtil.clone(u);s.brushType=determineBrushType(s.brushType,o),s.panelId=!0===o?null:o.panelId,i=e._creatingCover=createCover(e,s),e._covers.push(i)}if(i){var l=coverRenderers[determineBrushType(e._brushType,o)];i.__brushOption.range=l.getCreatingRange(clipByPanel(e,i,e._track)),n&&(endCreating(e,i),l.updateCommon(e,i)),updateCoverShape(e,i),a={isEnd:n}}}else n&&"single"===u.brushMode&&u.removeOnClick&&getPanelByPoint(e,r,t)&&clearCovers(e)&&(a={isEnd:n,removeOnClick:!0});return a}function determineBrushType(e,r){return"auto"===e?r.defaultBrushType:e}BrushController.prototype={constructor:BrushController,enableBrush:function(e){return this._brushType&&doDisableBrush(this),e.brushType&&doEnableBrush(this,e),this},setPanels:function(e){if(e&&e.length){var r=this._panels={};zrUtil.each(e,function(e){r[e.panelId]=zrUtil.clone(e)})}else this._panels=null;return this},mount:function(e){e=e||{},this._enableGlobalPan=e.enableGlobalPan;var r=this.group;return this._zr.add(r),r.attr({position:e.position||[0,0],rotation:e.rotation||0,scale:e.scale||[1,1]}),this._transform=r.getLocalTransform(),this},eachCover:function(e,r){each(this._covers,e,r)},updateCovers:function(e){e=zrUtil.map(e,function(e){return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT),e,!0)});var r="\0-brush-index-",t=this._covers,n=this._covers=[],a=this,i=this._creatingCover;return new DataDiffer(t,e,function(e,r){return o(e.__brushOption,r)},o).add(u).update(u).remove(function(e){t[e]!==i&&a.group.remove(t[e])}).execute(),this;function o(e,t){return(null!=e.id?e.id:r+t)+"-"+e.brushType}function u(r,o){var u=e[r];if(null!=o&&t[o]===i)n[r]=t[o];else{var s=n[r]=null!=o?(t[o].__brushOption=u,t[o]):endCreating(a,createCover(a,u));updateCoverAfterCreation(a,s)}}},unmount:function(){return this.enableBrush(!1),clearCovers(this),this._zr.remove(this.group),this},dispose:function(){this.unmount(),this.off()}},zrUtil.mixin(BrushController,Eventful);var mouseHandlers={mousedown:function(e){if(this._dragging)handleDragEnd(this,e);else if(!e.target||!e.target.draggable){preventDefault(e);var r=this.group.transformCoordToLocal(e.offsetX,e.offsetY);this._creatingCover=null,(this._creatingPanel=getPanelByPoint(this,e,r))&&(this._dragging=!0,this._track=[r.slice()])}},mousemove:function(e){var r=this._lastMouseMovePoint;r.x=e.offsetX,r.y=e.offsetY;var t=this.group.transformCoordToLocal(r.x,r.y);if(resetCursor(this,e,t),this._dragging){preventDefault(e);var n=updateCoverByMouse(this,e,t,!1);n&&trigger(this,n)}},mouseup:function(e){handleDragEnd(this,e)},globalout:function(e){handleDragEnd(this,e,!0)}};function handleDragEnd(e,r,t){if(e._dragging){!t&&preventDefault(r);var n=r.offsetX,a=r.offsetY,i=e._lastMouseMovePoint;t&&(n=i.x,a=i.y);var o=e.group.transformCoordToLocal(n,a),u=updateCoverByMouse(e,r,o,!0);e._dragging=!1,e._track=[],e._creatingCover=null,u&&trigger(e,u)}}var coverRenderers={lineX:getLineRenderer(0),lineY:getLineRenderer(1),rect:{createCover:function(e,r){return createBaseRectCover(curry(driftRect,function(e){return e},function(e){return e}),e,r,["w","e","n","s","se","sw","ne","nw"])},getCreatingRange:function(e){var r=getTrackEnds(e);return formatRectRange(r[1][0],r[1][1],r[0][0],r[0][1])},updateCoverShape:function(e,r,t,n){updateBaseRect(e,r,t,n)},updateCommon:updateCommon,contain:mainShapeContain},polygon:{createCover:function(e,r){var t=new graphic.Group;return t.add(new graphic.Polyline({name:"main",style:makeStyle(r),silent:!0})),t},getCreatingRange:function(e){return e},endCreating:function(e,r){r.remove(r.childAt(0)),r.add(new graphic.Polygon({name:"main",draggable:!0,drift:curry(driftPolygon,e,r),ondragend:curry(trigger,e,{isEnd:!0})}))},updateCoverShape:function(e,r,t,n){r.childAt(0).setShape({points:clipByPanel(e,r,t)})},updateCommon:updateCommon,contain:mainShapeContain}};function getLineRenderer(e){return{createCover:function(r,t){return createBaseRectCover(curry(driftRect,function(r){var t=[r,[0,100]];return e&&t.reverse(),t},function(r){return r[e]}),r,t,[["w","e"],["n","s"]][e])},getCreatingRange:function(r){var t=getTrackEnds(r);return[mathMin(t[0][e],t[1][e]),mathMax(t[0][e],t[1][e])]},updateCoverShape:function(r,t,n,a){var i,o=getPanelByCover(r,t);if(!0!==o&&o.getLinearBrushOtherExtent)i=o.getLinearBrushOtherExtent(e,r._transform);else{var u=r._zr;i=[0,[u.getWidth(),u.getHeight()][1-e]]}var s=[n,i];e&&s.reverse(),updateBaseRect(r,t,s,a)},updateCommon:updateCommon,contain:mainShapeContain}}var _default=BrushController;module.exports=_default;
//# sourceMappingURL=/sm/d52c285f310c6d94195f1483eb2da0fc9c9fc23da94a6051c96be259ccd709e0.map