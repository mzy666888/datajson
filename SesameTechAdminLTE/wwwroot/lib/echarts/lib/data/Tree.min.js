/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/lib/data/Tree.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var zrUtil=require("zrender/lib/core/util"),Model=require("../model/Model"),linkList=require("./helper/linkList"),List=require("./List"),createDimensions=require("./helper/createDimensions"),TreeNode=function(e,t){this.name=e||"",this.depth=0,this.height=0,this.parentNode=null,this.dataIndex=-1,this.children=[],this.viewChildren=[],this.hostTree=t};function Tree(e,t,r){this.root,this.data,this._nodes=[],this.hostModel=e,this.levelModels=zrUtil.map(t||[],function(t){return new Model(t,e,e.ecModel)}),this.leavesModel=new Model(r||{},e,e.ecModel)}function addChild(e,t){var r=t.children;e.parentNode!==t&&(r.push(e),e.parentNode=t)}TreeNode.prototype={constructor:TreeNode,isRemoved:function(){return this.dataIndex<0},eachNode:function(e,t,r){"function"==typeof e&&(r=t,t=e,e=null),e=e||{},zrUtil.isString(e)&&(e={order:e});var n,i=e.order||"preorder",a=this[e.attr||"children"];"preorder"===i&&(n=t.call(r,this));for(var o=0;!n&&o<a.length;o++)a[o].eachNode(e,t,r);"postorder"===i&&t.call(r,this)},updateDepthAndHeight:function(e){var t=0;this.depth=e;for(var r=0;r<this.children.length;r++){var n=this.children[r];n.updateDepthAndHeight(e+1),n.height>t&&(t=n.height)}this.height=t+1},getNodeById:function(e){if(this.getId()===e)return this;for(var t=0,r=this.children,n=r.length;t<n;t++){var i=r[t].getNodeById(e);if(i)return i}},contains:function(e){if(e===this)return!0;for(var t=0,r=this.children,n=r.length;t<n;t++){var i=r[t].contains(e);if(i)return i}},getAncestors:function(e){for(var t=[],r=e?this:this.parentNode;r;)t.push(r),r=r.parentNode;return t.reverse(),t},getValue:function(e){var t=this.hostTree.data;return t.get(t.getDimension(e||"value"),this.dataIndex)},setLayout:function(e,t){this.dataIndex>=0&&this.hostTree.data.setItemLayout(this.dataIndex,e,t)},getLayout:function(){return this.hostTree.data.getItemLayout(this.dataIndex)},getModel:function(e){if(!(this.dataIndex<0)){var t,r=this.hostTree,n=r.data.getItemModel(this.dataIndex),i=this.getLevelModel();return i||0!==this.children.length&&(0===this.children.length||!1!==this.isExpand)||(t=this.getLeavesModel()),n.getModel(e,(i||t||r.hostModel).getModel(e))}},getLevelModel:function(){return(this.hostTree.levelModels||[])[this.depth]},getLeavesModel:function(){return this.hostTree.leavesModel},setVisual:function(e,t){this.dataIndex>=0&&this.hostTree.data.setItemVisual(this.dataIndex,e,t)},getVisual:function(e,t){return this.hostTree.data.getItemVisual(this.dataIndex,e,t)},getRawIndex:function(){return this.hostTree.data.getRawIndex(this.dataIndex)},getId:function(){return this.hostTree.data.getId(this.dataIndex)},isAncestorOf:function(e){for(var t=e.parentNode;t;){if(t===this)return!0;t=t.parentNode}return!1},isDescendantOf:function(e){return e!==this&&e.isAncestorOf(this)}},Tree.prototype={constructor:Tree,type:"tree",eachNode:function(e,t,r){this.root.eachNode(e,t,r)},getNodeByDataIndex:function(e){var t=this.data.getRawIndex(e);return this._nodes[t]},getNodeByName:function(e){return this.root.getNodeByName(e)},update:function(){for(var e=this.data,t=this._nodes,r=0,n=t.length;r<n;r++)t[r].dataIndex=-1;for(r=0,n=e.count();r<n;r++)t[e.getRawIndex(r)].dataIndex=r},clearLayouts:function(){this.data.clearItemLayouts()}},Tree.createTree=function(e,t,r){var n=new Tree(t,r.levels,r.leaves),i=[],a=1;!function e(t,r){var o=t.value;a=Math.max(a,zrUtil.isArray(o)?o.length:1);i.push(t);var s=new TreeNode(t.name,n);r?addChild(s,r):n.root=s;n._nodes.push(s);var d=t.children;if(d)for(var h=0;h<d.length;h++)e(d[h],s)}(e),n.root.updateDepthAndHeight(0);var o=createDimensions(i,{coordDimensions:["value"],dimensionsCount:a}),s=new List(o,t);return s.initData(i),linkList({mainData:s,struct:n,structAttr:"tree"}),n.update(),n};var _default=Tree;module.exports=_default;
//# sourceMappingURL=/sm/d398354e9feeae2e105006010f4f3e6748b846cc2a5b0d2d3ffe0a50dde6f4ee.map