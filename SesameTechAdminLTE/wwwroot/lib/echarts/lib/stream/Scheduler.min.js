/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/lib/stream/Scheduler.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var _util=require("zrender/lib/core/util"),each=_util.each,map=_util.map,isFunction=_util.isFunction,createHashMap=_util.createHashMap,noop=_util.noop,_task=require("./task"),createTask=_task.createTask,_component=require("../util/component"),getUID=_component.getUID,GlobalModel=require("../model/Global"),ExtensionAPI=require("../ExtensionAPI"),_model=require("../util/model"),normalizeToArray=_model.normalizeToArray;function Scheduler(e,a,t,r){this.ecInstance=e,this.api=a,this.unfinished;t=this._dataProcessorHandlers=t.slice(),r=this._visualHandlers=r.slice();this._allHandlers=t.concat(r),this._stageTaskMap=createHashMap()}var proto=Scheduler.prototype;function performStageTasks(e,a,t,r,s){var i;function o(e,a){return e.setDirty&&(!e.dirtyMap||e.dirtyMap.get(a.__pipeline.id))}s=s||{},each(a,function(a,n){if(!s.visualType||s.visualType===a.visualType){var l=e._stageTaskMap.get(a.uid),p=l.seriesTaskMap,c=l.overallTask;if(c){var u,d=c.agentStubMap;d.each(function(e){o(s,e)&&(e.dirty(),u=!0)}),u&&c.dirty(),updatePayload(c,r);var h=e.getPerformArgs(c,s.block);d.each(function(e){e.perform(h)}),i|=c.perform(h)}else p&&p.each(function(n,l){o(s,n)&&n.dirty();var p=e.getPerformArgs(n,s.block);p.skip=!a.performRawSeries&&t.isSeriesFiltered(n.context.model),updatePayload(n,r),i|=n.perform(p)})}}),e.unfinished|=i}proto.restoreData=function(e,a){e.restoreData(a),this._stageTaskMap.each(function(e){var a=e.overallTask;a&&a.dirty()})},proto.getPerformArgs=function(e,a){if(e.__pipeline){var t=this._pipelineMap.get(e.__pipeline.id),r=t.context,s=!a&&t.progressiveEnabled&&(!r||r.progressiveRender)&&e.__idxInPipeline>t.blockIndex?t.step:null,i=r&&r.modDataCount;return{step:s,modBy:null!=i?Math.ceil(i/s):null,modDataCount:i}}},proto.getPipeline=function(e){return this._pipelineMap.get(e)},proto.updateStreamModes=function(e,a){var t=this._pipelineMap.get(e.uid),r=e.getData().count(),s=t.progressiveEnabled&&a.incrementalPrepareRender&&r>=t.threshold,i=e.get("large")&&r>=e.get("largeThreshold"),o="mod"===e.get("progressiveChunkMode")?r:null;e.pipelineContext=t.context={progressiveRender:s,modDataCount:o,large:i}},proto.restorePipelines=function(e){var a=this,t=a._pipelineMap=createHashMap();e.eachSeries(function(e){var r=e.getProgressive(),s=e.uid;t.set(s,{id:s,head:null,tail:null,threshold:e.getProgressiveThreshold(),progressiveEnabled:r&&!(e.preventIncremental&&e.preventIncremental()),blockIndex:-1,step:Math.round(r||700),count:0}),pipe(a,e,e.dataTask)})},proto.prepareStageTasks=function(){var e=this._stageTaskMap,a=this.ecInstance.getModel(),t=this.api;each(this._allHandlers,function(r){var s=e.get(r.uid)||e.set(r.uid,[]);r.reset&&createSeriesStageTask(this,r,s,a,t),r.overallReset&&createOverallStageTask(this,r,s,a,t)},this)},proto.prepareView=function(e,a,t,r){var s=e.renderTask,i=s.context;i.model=a,i.ecModel=t,i.api=r,s.__block=!e.incrementalPrepareRender,pipe(this,a,s)},proto.performDataProcessorTasks=function(e,a){performStageTasks(this,this._dataProcessorHandlers,e,a,{block:!0})},proto.performVisualTasks=function(e,a,t){performStageTasks(this,this._visualHandlers,e,a,t)},proto.performSeriesTasks=function(e){var a;e.eachSeries(function(e){a|=e.dataTask.perform()}),this.unfinished|=a},proto.plan=function(){this._pipelineMap.each(function(e){var a=e.tail;do{if(a.__block){e.blockIndex=a.__idxInPipeline;break}a=a.getUpstream()}while(a)})};var updatePayload=proto.updatePayload=function(e,a){"remain"!==a&&(e.context.payload=a)};function createSeriesStageTask(e,a,t,r,s){var i=t.seriesTaskMap||(t.seriesTaskMap=createHashMap()),o=a.seriesType,n=a.getTargetSeries;function l(t){var o=t.uid,n=i.get(o)||i.set(o,createTask({plan:seriesTaskPlan,reset:seriesTaskReset,count:seriesTaskCount}));n.context={model:t,ecModel:r,api:s,useClearVisual:a.isVisual&&!a.isLayout,plan:a.plan,reset:a.reset,scheduler:e},pipe(e,t,n)}a.createOnAllSeries?r.eachRawSeries(l):o?r.eachRawSeriesByType(o,l):n&&n(r,s).each(l);var p=e._pipelineMap;i.each(function(e,a){p.get(a)||(e.dispose(),i.removeKey(a))})}function createOverallStageTask(e,a,t,r,s){var i=t.overallTask=t.overallTask||createTask({reset:overallTaskReset});i.context={ecModel:r,api:s,overallReset:a.overallReset,scheduler:e};var o=i.agentStubMap=i.agentStubMap||createHashMap(),n=a.seriesType,l=a.getTargetSeries,p=!0,c=a.modifyOutputEnd;function u(a){var t=a.uid,r=o.get(t);r||(r=o.set(t,createTask({reset:stubReset,onDirty:stubOnDirty})),i.dirty()),r.context={model:a,overallProgress:p,modifyOutputEnd:c},r.agent=i,r.__block=p,pipe(e,a,r)}n?r.eachRawSeriesByType(n,u):l?l(r,s).each(u):(p=!1,each(r.getSeries(),u));var d=e._pipelineMap;o.each(function(e,a){d.get(a)||(e.dispose(),i.dirty(),o.removeKey(a))})}function overallTaskReset(e){e.overallReset(e.ecModel,e.api,e.payload)}function stubReset(e,a){return e.overallProgress&&stubProgress}function stubProgress(){this.agent.dirty(),this.getDownstream().dirty()}function stubOnDirty(){this.agent&&this.agent.dirty()}function seriesTaskPlan(e){return e.plan&&e.plan(e.model,e.ecModel,e.api,e.payload)}function seriesTaskReset(e){e.useClearVisual&&e.data.clearAllVisual();var a=e.resetDefines=normalizeToArray(e.reset(e.model,e.ecModel,e.api,e.payload));return a.length>1?map(a,function(e,a){return makeSeriesTaskProgress(a)}):singleSeriesTaskProgress}var singleSeriesTaskProgress=makeSeriesTaskProgress(0);function makeSeriesTaskProgress(e){return function(a,t){var r=t.data,s=t.resetDefines[e];if(s&&s.dataEach)for(var i=a.start;i<a.end;i++)s.dataEach(r,i);else s&&s.progress&&s.progress(a,r)}}function seriesTaskCount(e){return e.data.count()}function pipe(e,a,t){var r=a.uid,s=e._pipelineMap.get(r);!s.head&&(s.head=t),s.tail&&s.tail.pipe(t),s.tail=t,t.__idxInPipeline=s.count++,t.__pipeline=s}function detectSeriseType(e){seriesType=null;try{e(ecModelMock,apiMock)}catch(e){}return seriesType}Scheduler.wrapStageHandler=function(e,a){return isFunction(e)&&(e={overallReset:e,seriesType:detectSeriseType(e)}),e.uid=getUID("stageHandler"),a&&(e.visualType=a),e};var seriesType,ecModelMock={},apiMock={};function mockMethods(e,a){for(var t in a.prototype)e[t]=noop}mockMethods(ecModelMock,GlobalModel),mockMethods(apiMock,ExtensionAPI),ecModelMock.eachSeriesByType=ecModelMock.eachRawSeriesByType=function(e){seriesType=e},ecModelMock.eachComponent=function(e){"series"===e.mainType&&e.subType&&(seriesType=e.subType)};var _default=Scheduler;module.exports=_default;
//# sourceMappingURL=/sm/1ae765516e5f0a43a334ff69e302770aaf6793f59517529c3571d2f5d077453b.map