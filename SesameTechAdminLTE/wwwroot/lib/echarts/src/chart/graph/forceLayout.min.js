/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/chart/graph/forceLayout.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{forceLayout}from"./forceHelper";import{simpleLayout}from"./simpleLayoutHelper";import{circularLayout}from"./circularLayoutHelper";import{linearMap}from"../../util/number";import*as vec2 from"zrender/src/core/vector";import*as zrUtil from"zrender/src/core/util";export default function(e){e.eachSeriesByType("graph",function(e){if(!(g=e.coordinateSystem)||"view"===g.type)if("force"===e.get("layout")){var t=e.preservedPoints||{},r=e.getGraph(),a=r.data,o=r.edgeData,n=e.getModel("force"),i=n.get("initLayout");e.preservedPoints?a.each(function(e){var r=a.getId(e);a.setItemLayout(e,t[r]||[NaN,NaN])}):i&&"none"!==i?"circular"===i&&circularLayout(e,"value"):simpleLayout(e);var u=a.getDataExtent("value"),c=o.getDataExtent("value"),s=n.get("repulsion"),l=n.get("edgeLength");zrUtil.isArray(s)||(s=[s,s]),zrUtil.isArray(l)||(l=[l,l]),l=[l[1],l[0]];var g,p=a.mapArray("value",function(e,t){var r=a.getItemLayout(t),o=linearMap(e,u,s);return isNaN(o)&&(o=(s[0]+s[1])/2),{w:o,rep:o,fixed:a.getItemModel(t).get("fixed"),p:!r||isNaN(r[0])||isNaN(r[1])?null:r}}),y=o.mapArray("value",function(e,t){var a=r.getEdgeByIndex(t),o=linearMap(e,c,l);isNaN(o)&&(o=(l[0]+l[1])/2);var n=a.getModel();return{n1:p[a.node1.dataIndex],n2:p[a.node2.dataIndex],d:o,curveness:n.get("lineStyle.curveness")||0,ignoreForceLayout:n.get("ignoreForceLayout")}}),d=(g=e.coordinateSystem).getBoundingRect(),f=forceLayout(p,y,{rect:d,gravity:n.get("gravity"),friction:n.get("friction")}),v=f.step;f.step=function(e){for(var o=0,n=p.length;o<n;o++)p[o].fixed&&vec2.copy(p[o].p,r.getNodeByIndex(o).getLayout());v(function(o,n,i){for(var u=0,c=o.length;u<c;u++)o[u].fixed||r.getNodeByIndex(u).setLayout(o[u].p),t[a.getId(u)]=o[u].p;for(u=0,c=n.length;u<c;u++){var s=n[u],l=r.getEdgeByIndex(u),g=s.n1.p,p=s.n2.p,y=l.getLayout();(y=y?y.slice():[])[0]=y[0]||[],y[1]=y[1]||[],vec2.copy(y[0],g),vec2.copy(y[1],p),+s.curveness&&(y[2]=[(g[0]+p[0])/2-(g[1]-p[1])*s.curveness,(g[1]+p[1])/2-(p[0]-g[0])*s.curveness]),l.setLayout(y)}e&&e(i)})},e.forceLayout=f,e.preservedPoints=t,f.step()}else e.forceLayout=null})}
//# sourceMappingURL=/sm/ef8c22e66b2d2d62f140d0e6018c8e5864de84a62c77e1ea0b1f0f6699be7c9a.map