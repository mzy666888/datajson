/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/chart/graph/adjustEdge.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as curveTool from"zrender/src/core/curve";import*as vec2 from"zrender/src/core/vector";import{getSymbolSize}from"./graphHelper";var v1=[],v2=[],v3=[],quadraticAt=curveTool.quadraticAt,v2DistSquare=vec2.distSquare,mathAbs=Math.abs;function intersectCurveCircle(e,r,c){for(var o,a=e[0],v=e[1],t=e[2],i=1/0,n=c*c,u=.1,l=.1;l<=.9;l+=.1){v1[0]=quadraticAt(a[0],v[0],t[0],l),v1[1]=quadraticAt(a[1],v[1],t[1],l),(m=mathAbs(v2DistSquare(v1,r)-n))<i&&(i=m,o=l)}for(var d=0;d<32;d++){var s=o+u;v2[0]=quadraticAt(a[0],v[0],t[0],o),v2[1]=quadraticAt(a[1],v[1],t[1],o),v3[0]=quadraticAt(a[0],v[0],t[0],s),v3[1]=quadraticAt(a[1],v[1],t[1],s);var m=v2DistSquare(v2,r)-n;if(mathAbs(m)<.01)break;var y=v2DistSquare(v3,r)-n;u/=2,m<0?y>=0?o+=u:o-=u:y>=0?o-=u:o+=u}return o}export default function(e,r){var c=[],o=curveTool.quadraticSubdivide,a=[[],[],[]],v=[[],[]],t=[];r/=2,e.eachEdge(function(e,i){var n=e.getLayout(),u=e.getVisual("fromSymbol"),l=e.getVisual("toSymbol");n.__original||(n.__original=[vec2.clone(n[0]),vec2.clone(n[1])],n[2]&&n.__original.push(vec2.clone(n[2])));var d=n.__original;if(null!=n[2]){if(vec2.copy(a[0],d[0]),vec2.copy(a[1],d[2]),vec2.copy(a[2],d[1]),u&&"none"!==u){var s=getSymbolSize(e.node1),m=intersectCurveCircle(a,d[0],s*r);o(a[0][0],a[1][0],a[2][0],m,c),a[0][0]=c[3],a[1][0]=c[4],o(a[0][1],a[1][1],a[2][1],m,c),a[0][1]=c[3],a[1][1]=c[4]}if(l&&"none"!==l){s=getSymbolSize(e.node2),m=intersectCurveCircle(a,d[1],s*r);o(a[0][0],a[1][0],a[2][0],m,c),a[1][0]=c[1],a[2][0]=c[2],o(a[0][1],a[1][1],a[2][1],m,c),a[1][1]=c[1],a[2][1]=c[2]}vec2.copy(n[0],a[0]),vec2.copy(n[1],a[2]),vec2.copy(n[2],a[1])}else{if(vec2.copy(v[0],d[0]),vec2.copy(v[1],d[1]),vec2.sub(t,v[1],v[0]),vec2.normalize(t,t),u&&"none"!==u){s=getSymbolSize(e.node1);vec2.scaleAndAdd(v[0],v[0],t,s*r)}if(l&&"none"!==l){s=getSymbolSize(e.node2);vec2.scaleAndAdd(v[1],v[1],t,-s*r)}vec2.copy(n[0],v[0]),vec2.copy(n[1],v[1])}})}
//# sourceMappingURL=/sm/b5f18138f38cfadd0ad050df76ef704af7639dd37131a20ec0b57a98d8a606aa.map