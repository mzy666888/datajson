/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/chart/sankey/sankeyLayout.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as layout from"../../util/layout";import*as zrUtil from"zrender/src/core/util";import{groupData}from"../../util/model";export default function(t,e,o){t.eachSeriesByType("sankey",function(t){var o=t.get("nodeWidth"),a=t.get("nodeGap"),u=getViewRect(t,e);t.layoutInfo=u;var n=u.width,r=u.height,i=t.getGraph(),g=i.nodes,l=i.edges;computeNodeValues(g),layoutSankey(g,l,o,a,n,r,0!==zrUtil.filter(g,function(t){return 0===t.getLayout().value}).length?0:t.get("layoutIterations"),t.get("orient"),t.get("nodeAlign"))})}function getViewRect(t,e){return layout.getLayoutRect(t.getBoxLayoutParams(),{width:e.getWidth(),height:e.getHeight()})}function layoutSankey(t,e,o,a,u,n,r,i,g){computeNodeBreadths(t,e,o,u,n,i,g),computeNodeDepths(t,e,n,u,a,r,i),computeEdgeDepths(t,i)}function computeNodeValues(t){zrUtil.each(t,function(t){var e=sum(t.outEdges,getEdgeValue),o=sum(t.inEdges,getEdgeValue),a=Math.max(e,o);t.setLayout({value:a},!0)})}function computeNodeBreadths(t,e,o,a,u,n,r){for(var i=[],g=[],l=[],s=[],c=0,d=0;d<e.length;d++)i[d]=1;for(d=0;d<t.length;d++)g[d]=t[d].inEdges.length,0===g[d]&&l.push(t[d]);for(var h=-1;l.length;){for(var y=0;y<l.length;y++){var f=l[y],v=f.hostGraph.data.getRawDataItem(f.dataIndex),L=null!=v.depth&&v.depth>=0;L&&v.depth>h&&(h=v.depth),f.setLayout({depth:L?v.depth:c},!0),"vertical"===n?f.setLayout({dy:o},!0):f.setLayout({dx:o},!0);for(var p=0;p<f.outEdges.length;p++){var x=f.outEdges[p];i[e.indexOf(x)]=0;var m=x.node2;0==--g[t.indexOf(m)]&&s.indexOf(m)<0&&s.push(m)}}++c,l=s,s=[]}for(d=0;d<i.length;d++)if(1===i[d])throw new Error("Sankey is a DAG, the original data has cycle!");var E=h>c-1?h:c-1;r&&"left"!==r&&adjustNodeWithNodeAlign(t,r,n,E),scaleNodeBreadths(t,"vertical"===n?(u-o)/E:(a-o)/E,n)}function isNodeDepth(t){var e=t.hostGraph.data.getRawDataItem(t.dataIndex);return null!=e.depth&&e.depth>=0}function adjustNodeWithNodeAlign(t,e,o,a){if("right"===e){for(var u=[],n=t,r=0;n.length;){for(var i=0;i<n.length;i++){var g=n[i];g.setLayout({skNodeHeight:r},!0);for(var l=0;l<g.inEdges.length;l++){var s=g.inEdges[l];u.indexOf(s.node1)<0&&u.push(s.node1)}}n=u,u=[],++r}zrUtil.each(t,function(t){isNodeDepth(t)||t.setLayout({depth:Math.max(0,a-t.getLayout().skNodeHeight)},!0)})}else"justify"===e&&moveSinksRight(t,a)}function moveSinksRight(t,e){zrUtil.each(t,function(t){isNodeDepth(t)||t.outEdges.length||t.setLayout({depth:e},!0)})}function scaleNodeBreadths(t,e,o){zrUtil.each(t,function(t){var a=t.getLayout().depth*e;"vertical"===o?t.setLayout({y:a},!0):t.setLayout({x:a},!0)})}function computeNodeDepths(t,e,o,a,u,n,r){var i=prepareNodesByBreadth(t,r);initializeNodeDepth(i,e,o,a,u,r),resolveCollisions(i,u,o,a,r);for(var g=1;n>0;n--)relaxRightToLeft(i,g*=.99,r),resolveCollisions(i,u,o,a,r),relaxLeftToRight(i,g,r),resolveCollisions(i,u,o,a,r)}function prepareNodesByBreadth(t,e){var o=[],a="vertical"===e?"y":"x",u=groupData(t,function(t){return t.getLayout()[a]});return u.keys.sort(function(t,e){return t-e}),zrUtil.each(u.keys,function(t){o.push(u.buckets.get(t))}),o}function initializeNodeDepth(t,e,o,a,u,n){var r=1/0;zrUtil.each(t,function(t){var e=t.length,i=0;zrUtil.each(t,function(t){i+=t.getLayout().value});var g="vertical"===n?(a-(e-1)*u)/i:(o-(e-1)*u)/i;g<r&&(r=g)}),zrUtil.each(t,function(t){zrUtil.each(t,function(t,e){var o=t.getLayout().value*r;"vertical"===n?(t.setLayout({x:e},!0),t.setLayout({dx:o},!0)):(t.setLayout({y:e},!0),t.setLayout({dy:o},!0))})}),zrUtil.each(e,function(t){var e=+t.getValue()*r;t.setLayout({dy:e},!0)})}function resolveCollisions(t,e,o,a,u){var n="vertical"===u?"x":"y";zrUtil.each(t,function(t){var r,i,g;t.sort(function(t,e){return t.getLayout()[n]-e.getLayout()[n]});for(var l=0,s=t.length,c="vertical"===u?"dx":"dy",d=0;d<s;d++)(g=l-(i=t[d]).getLayout()[n])>0&&(r=i.getLayout()[n]+g,"vertical"===u?i.setLayout({x:r},!0):i.setLayout({y:r},!0)),l=i.getLayout()[n]+i.getLayout()[c]+e;if((g=l-e-("vertical"===u?a:o))>0)for(r=i.getLayout()[n]-g,"vertical"===u?i.setLayout({x:r},!0):i.setLayout({y:r},!0),l=r,d=s-2;d>=0;--d)(g=(i=t[d]).getLayout()[n]+i.getLayout()[c]+e-l)>0&&(r=i.getLayout()[n]-g,"vertical"===u?i.setLayout({x:r},!0):i.setLayout({y:r},!0)),l=i.getLayout()[n]})}function relaxRightToLeft(t,e,o){zrUtil.each(t.slice().reverse(),function(t){zrUtil.each(t,function(t){if(t.outEdges.length){var a=sum(t.outEdges,weightedTarget,o)/sum(t.outEdges,getEdgeValue,o);if("vertical"===o){var u=t.getLayout().x+(a-center(t,o))*e;t.setLayout({x:u},!0)}else{var n=t.getLayout().y+(a-center(t,o))*e;t.setLayout({y:n},!0)}}})})}function weightedTarget(t,e){return center(t.node2,e)*t.getValue()}function weightedSource(t,e){return center(t.node1,e)*t.getValue()}function center(t,e){return"vertical"===e?t.getLayout().x+t.getLayout().dx/2:t.getLayout().y+t.getLayout().dy/2}function getEdgeValue(t){return t.getValue()}function sum(t,e,o){for(var a=0,u=t.length,n=-1;++n<u;){var r=+e.call(t,t[n],o);isNaN(r)||(a+=r)}return a}function relaxLeftToRight(t,e,o){zrUtil.each(t,function(t){zrUtil.each(t,function(t){if(t.inEdges.length){var a=sum(t.inEdges,weightedSource,o)/sum(t.inEdges,getEdgeValue,o);if("vertical"===o){var u=t.getLayout().x+(a-center(t,o))*e;t.setLayout({x:u},!0)}else{var n=t.getLayout().y+(a-center(t,o))*e;t.setLayout({y:n},!0)}}})})}function computeEdgeDepths(t,e){var o="vertical"===e?"x":"y";zrUtil.each(t,function(t){t.outEdges.sort(function(t,e){return t.node2.getLayout()[o]-e.node2.getLayout()[o]}),t.inEdges.sort(function(t,e){return t.node1.getLayout()[o]-e.node1.getLayout()[o]})}),zrUtil.each(t,function(t){var e=0,o=0;zrUtil.each(t.outEdges,function(t){t.setLayout({sy:e},!0),e+=t.getLayout().dy}),zrUtil.each(t.inEdges,function(t){t.setLayout({ty:o},!0),o+=t.getLayout().dy})})}
//# sourceMappingURL=/sm/df6c2b829b355f8cda542a7ea13366000f0f588402a73181f94764e98f7b8b39.map