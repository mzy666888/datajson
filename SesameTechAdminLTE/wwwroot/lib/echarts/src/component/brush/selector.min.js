/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/component/brush/selector.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as polygonContain from"zrender/src/contain/polygon";import BoundingRect from"zrender/src/core/BoundingRect";import{linePolygonIntersect}from"../../util/graphic";var selector={lineX:getLineSelectors(0),lineY:getLineSelectors(1),rect:{point:function(n,e,t){return n&&t.boundingRect.contain(n[0],n[1])},rect:function(n,e,t){return n&&t.boundingRect.intersect(n)}},polygon:{point:function(n,e,t){return n&&t.boundingRect.contain(n[0],n[1])&&polygonContain.contain(t.range,n[0],n[1])},rect:function(n,e,t){var o=t.range;if(!n||o.length<=1)return!1;var i=n.x,r=n.y,c=n.width,g=n.height,a=o[0];return!!(polygonContain.contain(o,i,r)||polygonContain.contain(o,i+c,r)||polygonContain.contain(o,i,r+g)||polygonContain.contain(o,i+c,r+g)||BoundingRect.create(n).contain(a[0],a[1])||linePolygonIntersect(i,r,i+c,r,o)||linePolygonIntersect(i,r,i,r+g,o)||linePolygonIntersect(i+c,r,i+c,r+g,o)||linePolygonIntersect(i,r+g,i+c,r+g,o))||void 0}}};function getLineSelectors(n){var e=["x","y"],t=["width","height"];return{point:function(e,t,o){if(e){var i=o.range;return inLineRange(e[n],i)}},rect:function(o,i,r){if(o){var c=r.range,g=[o[e[n]],o[e[n]]+o[t[n]]];return g[1]<g[0]&&g.reverse(),inLineRange(g[0],c)||inLineRange(g[1],c)||inLineRange(c[0],g)||inLineRange(c[1],g)}}}}function inLineRange(n,e){return e[0]<=n&&n<=e[1]}export default selector;
//# sourceMappingURL=/sm/1ebc3f96edcda696d3832fc8e3e07f0fd2da0500e95bf63804452501bad7e189.map