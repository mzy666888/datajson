/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/component/helper/BrushTargetManager.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{__DEV__}from"../../config";import*as zrUtil from"zrender/src/core/util";import*as graphic from"../../util/graphic";import*as modelUtil from"../../util/model";import*as brushHelper from"./brushHelper";var each=zrUtil.each,indexOf=zrUtil.indexOf,curry=zrUtil.curry,COORD_CONVERTS=["dataToPoint","pointToData"],INCLUDE_FINDER_MAIN_TYPES=["grid","xAxis","yAxis","geo","graph","polar","radiusAxis","angleAxis","bmap"];function BrushTargetManager(e,r,t){var o=this._targetInfoList=[],n={},a=parseFinder(r,e);each(targetInfoBuilders,function(e,r){(!t||!t.include||indexOf(t.include,r)>=0)&&e(a,o,n)})}var proto=BrushTargetManager.prototype;function formatMinMax(e){return e[0]>e[1]&&e.reverse(),e}function parseFinder(e,r){return modelUtil.parseFinder(e,r,{includeMainTypes:INCLUDE_FINDER_MAIN_TYPES})}proto.setOutputRanges=function(e,r){this.matchOutputRanges(e,r,function(e,r,t){if((e.coordRanges||(e.coordRanges=[])).push(r),!e.coordRange){e.coordRange=r;var o=coordConvert[e.brushType](0,t,r);e.__rangeOffset={offset:diffProcessor[e.brushType](o.values,e.range,[1,1]),xyMinMax:o.xyMinMax}}})},proto.matchOutputRanges=function(e,r,t){each(e,function(e){var o=this.findTargetInfo(e,r);o&&!0!==o&&zrUtil.each(o.coordSyses,function(o){var n=coordConvert[e.brushType](1,o,e.range);t(e,n.values,o,r)})},this)},proto.setInputRanges=function(e,r){each(e,function(e){var t=this.findTargetInfo(e,r);if(__DEV__&&(zrUtil.assert(!t||!0===t||e.coordRange,"coordRange must be specified when coord index specified."),zrUtil.assert(!t||!0!==t||e.range,"range must be specified in global brush.")),e.range=e.range||[],t&&!0!==t){e.panelId=t.panelId;var o=coordConvert[e.brushType](0,t.coordSys,e.coordRange),n=e.__rangeOffset;e.range=n?diffProcessor[e.brushType](o.values,n.offset,getScales(o.xyMinMax,n.xyMinMax)):o.values}},this)},proto.makePanelOpts=function(e,r){return zrUtil.map(this._targetInfoList,function(t){var o=t.getPanelRect();return{panelId:t.panelId,defaultBrushType:r&&r(t),clipPath:brushHelper.makeRectPanelClipPath(o),isTargetByCursor:brushHelper.makeRectIsTargetByCursor(o,e,t.coordSysModel),getLinearBrushOtherExtent:brushHelper.makeLinearBrushOtherExtent(o)}})},proto.controlSeries=function(e,r,t){var o=this.findTargetInfo(e,t);return!0===o||o&&indexOf(o.coordSyses,r.coordinateSystem)>=0},proto.findTargetInfo=function(e,r){for(var t=this._targetInfoList,o=parseFinder(r,e),n=0;n<t.length;n++){var a=t[n],i=e.panelId;if(i){if(a.panelId===i)return a}else for(n=0;n<targetInfoMatchers.length;n++)if(targetInfoMatchers[n](o,a))return a}return!0};var targetInfoBuilders={grid:function(e,r){var t=e.xAxisModels,o=e.yAxisModels,n=e.gridModels,a=zrUtil.createHashMap(),i={},s={};(t||o||n)&&(each(t,function(e){var r=e.axis.grid.model;a.set(r.id,r),i[r.id]=!0}),each(o,function(e){var r=e.axis.grid.model;a.set(r.id,r),s[r.id]=!0}),each(n,function(e){a.set(e.id,e),i[e.id]=!0,s[e.id]=!0}),a.each(function(e){var n=e.coordinateSystem,a=[];each(n.getCartesians(),function(e,r){(indexOf(t,e.getAxis("x").model)>=0||indexOf(o,e.getAxis("y").model)>=0)&&a.push(e)}),r.push({panelId:"grid--"+e.id,gridModel:e,coordSysModel:e,coordSys:a[0],coordSyses:a,getPanelRect:panelRectBuilder.grid,xAxisDeclared:i[e.id],yAxisDeclared:s[e.id]})}))},geo:function(e,r){each(e.geoModels,function(e){var t=e.coordinateSystem;r.push({panelId:"geo--"+e.id,geoModel:e,coordSysModel:e,coordSys:t,coordSyses:[t],getPanelRect:panelRectBuilder.geo})})}},targetInfoMatchers=[function(e,r){var t=e.xAxisModel,o=e.yAxisModel,n=e.gridModel;return!n&&t&&(n=t.axis.grid.model),!n&&o&&(n=o.axis.grid.model),n&&n===r.gridModel},function(e,r){var t=e.geoModel;return t&&t===r.geoModel}],panelRectBuilder={grid:function(){return this.coordSys.grid.getRect().clone()},geo:function(){var e=this.coordSys,r=e.getBoundingRect().clone();return r.applyTransform(graphic.getTransform(e)),r}},coordConvert={lineX:curry(axisConvert,0),lineY:curry(axisConvert,1),rect:function(e,r,t){var o=r[COORD_CONVERTS[e]]([t[0][0],t[1][0]]),n=r[COORD_CONVERTS[e]]([t[0][1],t[1][1]]),a=[formatMinMax([o[0],n[0]]),formatMinMax([o[1],n[1]])];return{values:a,xyMinMax:a}},polygon:function(e,r,t){var o=[[1/0,-1/0],[1/0,-1/0]];return{values:zrUtil.map(t,function(t){var n=r[COORD_CONVERTS[e]](t);return o[0][0]=Math.min(o[0][0],n[0]),o[1][0]=Math.min(o[1][0],n[1]),o[0][1]=Math.max(o[0][1],n[0]),o[1][1]=Math.max(o[1][1],n[1]),n}),xyMinMax:o}}};function axisConvert(e,r,t,o){__DEV__&&zrUtil.assert("cartesian2d"===t.type,"lineX/lineY brush is available only in cartesian2d.");var n=t.getAxis(["x","y"][e]),a=formatMinMax(zrUtil.map([0,1],function(e){return r?n.coordToData(n.toLocalCoord(o[e])):n.toGlobalCoord(n.dataToCoord(o[e]))})),i=[];return i[e]=a,i[1-e]=[NaN,NaN],{values:a,xyMinMax:i}}var diffProcessor={lineX:curry(axisDiffProcessor,0),lineY:curry(axisDiffProcessor,1),rect:function(e,r,t){return[[e[0][0]-t[0]*r[0][0],e[0][1]-t[0]*r[0][1]],[e[1][0]-t[1]*r[1][0],e[1][1]-t[1]*r[1][1]]]},polygon:function(e,r,t){return zrUtil.map(e,function(e,o){return[e[0]-t[0]*r[o][0],e[1]-t[1]*r[o][1]]})}};function axisDiffProcessor(e,r,t,o){return[r[0]-o[e]*t[0],r[1]-o[e]*t[1]]}function getScales(e,r){var t=getSize(e),o=getSize(r),n=[t[0]/o[0],t[1]/o[1]];return isNaN(n[0])&&(n[0]=1),isNaN(n[1])&&(n[1]=1),n}function getSize(e){return e?[e[0][1]-e[0][0],e[1][1]-e[1][0]]:[NaN,NaN]}export default BrushTargetManager;
//# sourceMappingURL=/sm/a298b406304327df7e550639efd4225b8484663260cb8f52473b0a62cc384418.map