/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/component/axisPointer/modelHelper.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as zrUtil from"zrender/src/core/util";import Model from"../../model/Model";var each=zrUtil.each,curry=zrUtil.curry;export function collect(e,o){var t={axesInfo:{},seriesInvolved:!1,coordSysAxesInfo:{},coordSysMap:{}};return collectAxesInfo(t,e,o),t.seriesInvolved&&collectSeriesInfo(t,e),t}function collectAxesInfo(e,o,t){var n=o.getComponent("tooltip"),r=o.getComponent("axisPointer"),i=r.get("link",!0)||[],s=[];each(t.getCoordinateSystems(),function(t){if(t.axisPointerEnabled){var a=makeKey(t.model),l=e.coordSysAxesInfo[a]={};e.coordSysMap[a]=t;var c=t.model.getModel("tooltip",n);if(each(t.getAxes(),curry(x,!1,null)),t.getTooltipAxes&&n&&c.get("show")){var d="axis"===c.get("trigger"),g="cross"===c.get("axisPointer.type"),u=t.getTooltipAxes(c.get("axisPointer.axis"));(d||g)&&each(u.baseAxes,curry(x,!g||"cross",d)),g&&each(u.otherAxes,curry(x,"cross",!1))}}function x(n,a,d){var g=d.model.getModel("axisPointer",r),u=g.get("show");if(u&&("auto"!==u||n||isHandleTrigger(g))){null==a&&(a=g.get("triggerTooltip"));var x=(g=n?makeAxisPointerModel(d,c,r,o,n,a):g).get("snap"),p=makeKey(d.model),f=a||x||"category"===d.type,m=e.axesInfo[p]={key:p,axis:d,coordSys:t,axisPointerModel:g,triggerTooltip:a,involveSeries:f,snap:x,useHandle:isHandleTrigger(g),seriesModels:[]};l[p]=m,e.seriesInvolved|=f;var v=getLinkGroupIndex(i,d);if(null!=v){var y=s[v]||(s[v]={axesInfo:{}});y.axesInfo[p]=m,y.mapper=i[v].mapper,m.linkGroup=y}}}})}function makeAxisPointerModel(e,o,t,n,r,i){var s=o.getModel("axisPointer"),a={};each(["type","snap","lineStyle","shadowStyle","label","animation","animationDurationUpdate","animationEasingUpdate","z"],function(e){a[e]=zrUtil.clone(s.get(e))}),a.snap="category"!==e.type&&!!i,"cross"===s.get("type")&&(a.type="line");var l=a.label||(a.label={});if(null==l.show&&(l.show=!1),"cross"===r){var c=s.get("label.show");if(l.show=null==c||c,!i){var d=a.lineStyle=s.get("crossStyle");d&&zrUtil.defaults(l,d.textStyle)}}return e.model.getModel("axisPointer",new Model(a,t,n))}function collectSeriesInfo(e,o){o.eachSeries(function(o){var t=o.coordinateSystem,n=o.get("tooltip.trigger",!0),r=o.get("tooltip.show",!0);t&&"none"!==n&&!1!==n&&"item"!==n&&!1!==r&&!1!==o.get("axisPointer.show",!0)&&each(e.coordSysAxesInfo[makeKey(t.model)],function(e){var n=e.axis;t.getAxis(n.dim)===n&&(e.seriesModels.push(o),null==e.seriesDataCount&&(e.seriesDataCount=0),e.seriesDataCount+=o.getData().count())})},this)}function getLinkGroupIndex(e,o){for(var t=o.model,n=o.dim,r=0;r<e.length;r++){var i=e[r]||{};if(checkPropInLink(i[n+"AxisId"],t.id)||checkPropInLink(i[n+"AxisIndex"],t.componentIndex)||checkPropInLink(i[n+"AxisName"],t.name))return r}}function checkPropInLink(e,o){return"all"===e||zrUtil.isArray(e)&&zrUtil.indexOf(e,o)>=0||e===o}export function fixValue(e){var o=getAxisInfo(e);if(o){var t=o.axisPointerModel,n=o.axis.scale,r=t.option,i=t.get("status"),s=t.get("value");null!=s&&(s=n.parse(s));var a=isHandleTrigger(t);null==i&&(r.status=a?"show":"hide");var l=n.getExtent().slice();l[0]>l[1]&&l.reverse(),(null==s||s>l[1])&&(s=l[1]),s<l[0]&&(s=l[0]),r.value=s,a&&(r.status=o.axis.scale.isBlank()?"hide":"show")}}export function getAxisInfo(e){var o=(e.ecModel.getComponent("axisPointer")||{}).coordSysAxesInfo;return o&&o.axesInfo[makeKey(e)]}export function getAxisPointerModel(e){var o=getAxisInfo(e);return o&&o.axisPointerModel}function isHandleTrigger(e){return!!e.get("handle.show")}export function makeKey(e){return e.type+"||"+e.id}
//# sourceMappingURL=/sm/747c1a9e62f4a37cd9c8f64c06bd1bb21ea18aed767858f65d25b639dee1131b.map