/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/util/KDTree.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import quickSelect from"./quickSelect";function Node(t,r){this.left=null,this.right=null,this.axis=t,this.data=r}var KDTree=function(t,r){t.length&&(r||(r=t[0].array.length),this.dimension=r,this.root=this._buildTree(t,0,t.length-1,0),this._stack=[],this._nearstNList=[])};KDTree.prototype._buildTree=function(t,r,a,e){if(a<r)return null;var i=Math.floor((r+a)/2),s=t[i=quickSelect(t,r,a,i,function(t,r){return t.array[e]-r.array[e]})],n=new Node(e,s);return e=(e+1)%this.dimension,a>r&&(n.left=this._buildTree(t,r,i-1,e),n.right=this._buildTree(t,i+1,a,e)),n},KDTree.prototype.nearest=function(t,r){var a=this.root,e=this._stack,i=0,s=1/0,n=null;for(a.data!==t&&(s=r(a.data,t),n=a),t.array[a.axis]<a.data.array[a.axis]?(a.right&&(e[i++]=a.right),a.left&&(e[i++]=a.left)):(a.left&&(e[i++]=a.left),a.right&&(e[i++]=a.right));i--;){a=e[i];var h=t.array[a.axis]-a.data.array[a.axis],d=h<0,l=!1;(h*=h)<s&&((h=r(a.data,t))<s&&a.data!==t&&(s=h,n=a),l=!0),d?(l&&a.right&&(e[i++]=a.right),a.left&&(e[i++]=a.left)):(l&&a.left&&(e[i++]=a.left),a.right&&(e[i++]=a.right))}return n.data},KDTree.prototype._addNearest=function(t,r,a){for(var e=this._nearstNList,i=t-1;i>0&&!(r>=e[i-1].dist);i--)e[i].dist=e[i-1].dist,e[i].node=e[i-1].node;e[i].dist=r,e[i].node=a},KDTree.prototype.nearestN=function(t,r,a,e){if(r<=0)return e.length=0,e;for(var i=this.root,s=this._stack,n=0,h=this._nearstNList,d=0;d<r;d++)h[d]||(h[d]={}),h[d].dist=0,h[d].node=null;var l=a(i.data,t),o=0;for(i.data!==t&&(o++,this._addNearest(o,l,i)),t.array[i.axis]<i.data.array[i.axis]?(i.right&&(s[n++]=i.right),i.left&&(s[n++]=i.left)):(i.left&&(s[n++]=i.left),i.right&&(s[n++]=i.right));n--;){i=s[n];var f=(l=t.array[i.axis]-i.data.array[i.axis])<0,u=!1;l*=l,(o<r||l<h[o-1].dist)&&(l=a(i.data,t),(o<r||l<h[o-1].dist)&&i.data!==t&&(o<r&&o++,this._addNearest(o,l,i)),u=!0),f?(u&&i.right&&(s[n++]=i.right),i.left&&(s[n++]=i.left)):(u&&i.left&&(s[n++]=i.left),i.right&&(s[n++]=i.right))}for(d=0;d<o;d++)e[d]=h[d].node.data;return e.length=o,e};export default KDTree;
//# sourceMappingURL=/sm/f57df5ae6b4d12398e27c4cf701795c900861f6dafaef911e78831b822027d10.map