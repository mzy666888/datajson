/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/view/Chart.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{each}from"zrender/src/core/util";import Group from"zrender/src/container/Group";import*as componentUtil from"../util/component";import*as clazzUtil from"../util/clazz";import*as modelUtil from"../util/model";import*as graphicUtil from"../util/graphic";import{createTask}from"../stream/task";import createRenderPlanner from"../chart/helper/createRenderPlanner";var inner=modelUtil.makeInner(),renderPlanner=createRenderPlanner();function Chart(){this.group=new Group,this.uid=componentUtil.getUID("viewChart"),this.renderTask=createTask({plan:renderTaskPlan,reset:renderTaskReset}),this.renderTask.context={view:this}}Chart.prototype={type:"chart",init:function(e,r){},render:function(e,r,t,n){},highlight:function(e,r,t,n){toggleHighlight(e.getData(),n,"emphasis")},downplay:function(e,r,t,n){toggleHighlight(e.getData(),n,"normal")},remove:function(e,r){this.group.removeAll()},dispose:function(){},incrementalPrepareRender:null,incrementalRender:null,updateTransform:null,filterForExposedEvent:null};var chartProto=Chart.prototype;function elSetState(e,r,t){if(e&&(e.trigger(r,t),e.isGroup&&!graphicUtil.isHighDownDispatcher(e)))for(var n=0,a=e.childCount();n<a;n++)elSetState(e.childAt(n),r,t)}function toggleHighlight(e,r,t){var n=modelUtil.queryDataIndex(e,r),a=r&&null!=r.highlightKey?graphicUtil.getHighlightDigit(r.highlightKey):null;null!=n?each(modelUtil.normalizeToArray(n),function(r){elSetState(e.getItemGraphicEl(r),t,a)}):e.eachItemGraphicEl(function(e){elSetState(e,t,a)})}function renderTaskPlan(e){return renderPlanner(e.model)}function renderTaskReset(e){var r=e.model,t=e.ecModel,n=e.api,a=e.payload,i=r.pipelineContext.progressiveRender,o=e.view,l=a&&inner(a).updateMethod,d=i?"incrementalPrepareRender":l&&o[l]?l:"render";return"render"!==d&&o[d](r,t,n,a),progressMethodMap[d]}chartProto.updateView=chartProto.updateLayout=chartProto.updateVisual=function(e,r,t,n){this.render(e,r,t,n)},clazzUtil.enableClassExtend(Chart,["dispose"]),clazzUtil.enableClassManagement(Chart,{registerWhenExtend:!0}),Chart.markUpdateMethod=function(e,r){inner(e).updateMethod=r};var progressMethodMap={incrementalPrepareRender:{progress:function(e,r){r.view.incrementalRender(e,r.model,r.ecModel,r.api,r.payload)}},render:{forceFirstProgress:!0,progress:function(e,r){r.view.render(r.model,r.ecModel,r.api,r.payload)}}};export default Chart;
//# sourceMappingURL=/sm/6e1c772efe0c7eb9e4dda3a4472f301b5aba6cb0dd0636aa9ea5a47d36ef576c.map