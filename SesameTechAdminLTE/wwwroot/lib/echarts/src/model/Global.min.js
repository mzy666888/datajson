/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/echarts@4.5.0/src/model/Global.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{__DEV__}from"../config";import{each,filter,map,isArray,indexOf,isObject,isString,createHashMap,assert,clone,merge,extend,mixin}from"zrender/src/core/util";import*as modelUtil from"../util/model";import Model from"./Model";import ComponentModel from"./Component";import globalDefault from"./globalDefault";import colorPaletteMixin from"./mixin/colorPalette";import{resetSourceDefaulter}from"../data/helper/sourceHelper";var OPTION_INNER_KEY="\0_ec_inner",GlobalModel=Model.extend({init:function(e,t,n,i){n=n||{},this.option=null,this._theme=new Model(n),this._optionManager=i},setOption:function(e,t){assert(!(OPTION_INNER_KEY in e),"please use chart.getOption()"),this._optionManager.setOption(e,t),this.resetOption(null)},resetOption:function(e){var t=!1,n=this._optionManager;if(!e||"recreate"===e){var i=n.mountOption("recreate"===e);this.option&&"recreate"!==e?(this.restoreData(),this.mergeOption(i)):initBase.call(this,i),t=!0}if("timeline"!==e&&"media"!==e||this.restoreData(),!e||"recreate"===e||"timeline"===e){var s=n.getTimelineOption(this);s&&(this.mergeOption(s),t=!0)}if(!e||"recreate"===e||"media"===e){var o=n.getMediaOption(this,this._api);o.length&&each(o,function(e){this.mergeOption(e,t=!0)},this)}return t},mergeOption:function(e){var t=this.option,n=this._componentsMap,i=[];resetSourceDefaulter(this),each(e,function(e,n){null!=e&&(ComponentModel.hasClass(n)?n&&i.push(n):t[n]=null==t[n]?clone(e):merge(t[n],e,!0))}),ComponentModel.topologicalTravel(i,ComponentModel.getAllClassMainTypes(),function(i,s){var o=modelUtil.normalizeToArray(e[i]),r=modelUtil.mappingToExists(n.get(i),o);modelUtil.makeIdAndName(r),each(r,function(e,t){var n=e.option;isObject(n)&&(e.keyInfo.mainType=i,e.keyInfo.subType=determineSubType(i,n,e.exist))});var a=getComponentsByTypes(n,s);t[i]=[],n.set(i,[]),each(r,function(e,s){var o=e.exist,r=e.option;if(assert(isObject(r)||o,"Empty component definition"),r){var l=ComponentModel.getClass(i,e.keyInfo.subType,!0);if(o&&o.constructor===l)o.name=e.keyInfo.name,o.mergeOption(r,this),o.optionUpdated(r,!1);else{var c=extend({dependentModels:a,componentIndex:s},e.keyInfo);o=new l(r,this,this,c),extend(o,c),o.init(r,this,this,c),o.optionUpdated(null,!0)}}else o.mergeOption({},this),o.optionUpdated({},!1);n.get(i)[s]=o,t[i][s]=o.option},this),"series"===i&&createSeriesIndices(this,n.get("series"))},this),this._seriesIndicesMap=createHashMap(this._seriesIndices=this._seriesIndices||[])},getOption:function(){var e=clone(this.option);return each(e,function(t,n){if(ComponentModel.hasClass(n)){for(var i=(t=modelUtil.normalizeToArray(t)).length-1;i>=0;i--)modelUtil.isIdInner(t[i])&&t.splice(i,1);e[n]=t}}),delete e[OPTION_INNER_KEY],e},getTheme:function(){return this._theme},getComponent:function(e,t){var n=this._componentsMap.get(e);if(n)return n[t||0]},queryComponents:function(e){var t=e.mainType;if(!t)return[];var n,i=e.index,s=e.id,o=e.name,r=this._componentsMap.get(t);if(!r||!r.length)return[];if(null!=i)isArray(i)||(i=[i]),n=filter(map(i,function(e){return r[e]}),function(e){return!!e});else if(null!=s){var a=isArray(s);n=filter(r,function(e){return a&&indexOf(s,e.id)>=0||!a&&e.id===s})}else if(null!=o){var l=isArray(o);n=filter(r,function(e){return l&&indexOf(o,e.name)>=0||!l&&e.name===o})}else n=r.slice();return filterBySubType(n,e)},findComponents:function(e){var t,n,i,s,o,r=e.query,a=e.mainType,l=(n=a+"Index",i=a+"Id",s=a+"Name",!(t=r)||null==t[n]&&null==t[i]&&null==t[s]?null:{mainType:a,index:t[n],id:t[i],name:t[s]}),c=l?this.queryComponents(l):this._componentsMap.get(a);return o=filterBySubType(c,e),e.filter?filter(o,e.filter):o},eachComponent:function(e,t,n){var i=this._componentsMap;if("function"==typeof e)n=t,t=e,i.each(function(e,i){each(e,function(e,s){t.call(n,i,e,s)})});else if(isString(e))each(i.get(e),t,n);else if(isObject(e)){var s=this.findComponents(e);each(s,t,n)}},getSeriesByName:function(e){var t=this._componentsMap.get("series");return filter(t,function(t){return t.name===e})},getSeriesByIndex:function(e){return this._componentsMap.get("series")[e]},getSeriesByType:function(e){var t=this._componentsMap.get("series");return filter(t,function(t){return t.subType===e})},getSeries:function(){return this._componentsMap.get("series").slice()},getSeriesCount:function(){return this._componentsMap.get("series").length},eachSeries:function(e,t){assertSeriesInitialized(this),each(this._seriesIndices,function(n){var i=this._componentsMap.get("series")[n];e.call(t,i,n)},this)},eachRawSeries:function(e,t){each(this._componentsMap.get("series"),e,t)},eachSeriesByType:function(e,t,n){assertSeriesInitialized(this),each(this._seriesIndices,function(i){var s=this._componentsMap.get("series")[i];s.subType===e&&t.call(n,s,i)},this)},eachRawSeriesByType:function(e,t,n){return each(this.getSeriesByType(e),t,n)},isSeriesFiltered:function(e){return assertSeriesInitialized(this),null==this._seriesIndicesMap.get(e.componentIndex)},getCurrentSeriesIndices:function(){return(this._seriesIndices||[]).slice()},filterSeries:function(e,t){assertSeriesInitialized(this),createSeriesIndices(this,filter(this._componentsMap.get("series"),e,t))},restoreData:function(e){var t=this._componentsMap;createSeriesIndices(this,t.get("series"));var n=[];t.each(function(e,t){n.push(t)}),ComponentModel.topologicalTravel(n,ComponentModel.getAllClassMainTypes(),function(n,i){each(t.get(n),function(t){("series"!==n||!isNotTargetSeries(t,e))&&t.restoreData()})})}});function isNotTargetSeries(e,t){if(t){var n=t.seiresIndex,i=t.seriesId,s=t.seriesName;return null!=n&&e.componentIndex!==n||null!=i&&e.id!==i||null!=s&&e.name!==s}}function mergeTheme(e,t){var n=e.color&&!e.colorLayer;each(t,function(t,i){"colorLayer"===i&&n||ComponentModel.hasClass(i)||("object"==typeof t?e[i]=e[i]?merge(e[i],t,!1):clone(t):null==e[i]&&(e[i]=t))})}function initBase(e){e=e,this.option={},this.option[OPTION_INNER_KEY]=1,this._componentsMap=createHashMap({series:[]}),this._seriesIndices,this._seriesIndicesMap,mergeTheme(e,this._theme.option),merge(e,globalDefault,!1),this.mergeOption(e)}function getComponentsByTypes(e,t){isArray(t)||(t=t?[t]:[]);var n={};return each(t,function(t){n[t]=(e.get(t)||[]).slice()}),n}function determineSubType(e,t,n){return t.type?t.type:n?n.subType:ComponentModel.determineSubType(e,t)}function createSeriesIndices(e,t){e._seriesIndicesMap=createHashMap(e._seriesIndices=map(t,function(e){return e.componentIndex})||[])}function filterBySubType(e,t){return t.hasOwnProperty("subType")?filter(e,function(e){return e.subType===t.subType}):e}function assertSeriesInitialized(e){if(__DEV__&&!e._seriesIndices)throw new Error("Option should contains series.")}mixin(GlobalModel,colorPaletteMixin);export default GlobalModel;
//# sourceMappingURL=/sm/53a49ac31b8acd3bf2c43b51b38a99b7e0009d5167dcb387695429cbc9b9aaf5.map